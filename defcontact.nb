(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25092,        581]
NotebookOptionsPosition[     24137,        544]
NotebookOutlinePosition[     24497,        560]
CellTagsIndexPosition[     24454,        557]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rmanga", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "alpha"}], ")"}], "*", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "alpha"}], "*", "x"}], "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rx", "=", 
   RowBox[{
    RowBox[{"rmult", "/", "rp"}], "+", "g"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yx", "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"rmanga", "[", "rx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"rp", "*", "yx"}], "-", "rmult"}], "\[Equal]", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"eq", ",", "rmult"}], "]"}]}], "Input",
 CellChangeTimes->{{3.748369784074911*^9, 3.74836981308501*^9}, {
  3.7483716107223663`*^9, 3.7483716386459312`*^9}, {3.748378411782217*^9, 
  3.748378426460144*^9}, {3.748378463315144*^9, 3.748378480939098*^9}, {
  3.7484854689916763`*^9, 3.74848549131024*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,5,1,31874279389619550850,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74848470074936*^9, 3.760630541110029*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"rmult", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "alpha"}], " ", "g", " ", "rp"}], "-", 
      RowBox[{"rp", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "alpha"}], " ", "g"}]]}], "]"}]}]}], "alpha"]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7483784443355503`*^9, 3.7483784833615103`*^9}, {
   3.748378552027516*^9, 3.748378558037654*^9}, 3.748383954047944*^9, {
   3.7484135179203777`*^9, 3.74841354538109*^9}, {3.748483104574746*^9, 
   3.74848315099854*^9}, 3.748484700758402*^9, 3.760630541170128*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rmanga2", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "alpha"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "x"}], "*", "alpha"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{"alpha", "*", "x"}], "]"}]}], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rx", "=", 
   RowBox[{
    RowBox[{"rmult", "/", "rp"}], "+", "g"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yx", "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"rmanga", "[", "rx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"rp", "*", "yx"}], "-", "rmult"}], "\[Equal]", "0"}]}], ";", 
  RowBox[{"Solve", "[", 
   RowBox[{"eq2", ",", "rmult"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7484124824895287`*^9, 3.748412488936401*^9}, {
  3.74841295673885*^9, 3.7484129743665457`*^9}, {3.7484135041746883`*^9, 
  3.748413510320313*^9}, {3.748485506987183*^9, 3.74848554642843*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,9,2,31874279389619550850,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7606305413066187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eq2", ",", "rmult"}], "]"}]], "Input",
 CellChangeTimes->{3.7484135299093237`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,10,3,31874279389619550850,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.748483124879593*^9, 3.748483151190144*^9}, 
   3.748484701160275*^9, 3.760630541375388*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"rmult", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "alpha"}], " ", "g", " ", "rp"}], "-", 
      RowBox[{"rp", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "alpha"}], " ", "g"}]]}], "]"}]}]}], "alpha"]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7484135321621237`*^9, 3.748413545438389*^9}, {
   3.748483104871285*^9, 3.7484831511960487`*^9}, 3.748484701179756*^9, 
   3.760630541381371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rp", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "alpha"}], " ", "g", " ", "rp"}], "+", 
     RowBox[{"rp", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"alpha", " ", "g"}]]}], "]"}]}]}], "alpha"], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.748378494117697*^9, 3.748378555604166*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
fuYtZ/46nGVlkP9UK4Hp5aCAW3tJWRbLGlbVR41fswzv27z9VM40GWj/6lhn
1cyyUfCf5kNTLGfycVeo8lIX7PZ8t9+UEMvytjEbCkWYJoHfc80N5yVZznkg
FkyRY1l1KKutbDvLrzS27jAxZrm4bte4lSvLH1wdnx6+zPIVgUw7yRssm+QN
8nTFssx3QOXVwySWP/3zP+qWsWBSVDpcrvCMZYtdnG+H8lluir2x7vQ7luM1
P3/c9pHlAx0i52caWW5TyGgO7GS5u6zoZjiH9oInRvs4krVZbkUJb3lNWC6N
2BXiZ8FypPRT9r3/sSx9wIttPpRl25LJebtylotucMys2quz4GD5tcM37HUX
/EnrofxRS/0Fy4vMvg3yMVyw0af0xxe9jRfcZ+2vecVp14LvZiyXbbi4e8EC
tYudOM/tZc0fcZzTrDFbsGmZ1b2ZFvMFZ8ecdH7cZLHgRMOJAxe6LRfc7fLA
X6/TasHj3l1u/N+tF3zNISJ8un/fgi++OVTf1G2zYOH3tb47frGcU6uzJnmI
5bYuaadj0yxrkocmZnlsFzztFLhaQoFlT4FkB/dTLHOtFlpU68fyvfWhWarn
Wa5Wdx2dC2VZ7j+l0KhYlrteFj/Mf83y+VJlUxHI8vKPacMXSlnW6biy3aiK
5WQ+86pvrSyrr3p7gtLOco3E1uVpXSzPq60+ePw3y7Ha19jqR1lWMJ1LV5ti
uWzfCZPEWZbtj7T//veP5f8BW02f/A==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748378520589262*^9, 3.7483785580973454`*^9}, 
   3.748383954355174*^9, {3.748413518061667*^9, 3.748413545498966*^9}, {
   3.748483104953788*^9, 3.748483151275236*^9}, 3.748484701379663*^9, 
   3.760630541498801*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"g", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dg", "=", 
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{"g", ",", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "0.01"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.748425780205112*^9, 3.7484258064489098`*^9}, {
  3.748425837221456*^9, 3.748425909122306*^9}, {3.748428669543725*^9, 
  3.748428675179205*^9}, {3.748430532540286*^9, 3.748430561794541*^9}, {
  3.748483101244636*^9, 3.748483168154428*^9}}],

Cell[BoxData[
 FractionBox["1", "x"]], "Output",
 CellChangeTimes->{{3.748425790780706*^9, 3.748425807827559*^9}, {
   3.748425842300047*^9, 3.74842586710207*^9}, 3.748425909637896*^9, {
   3.748428672620076*^9, 3.7484286762450323`*^9}, 3.748430533105579*^9, 
   3.748430563242978*^9, {3.748483105022902*^9, 3.7484831689511147`*^9}, 
   3.748484701475243*^9, 3.76063054157495*^9}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["x", "2"]]], "Output",
 CellChangeTimes->{{3.748425790780706*^9, 3.748425807827559*^9}, {
   3.748425842300047*^9, 3.74842586710207*^9}, 3.748425909637896*^9, {
   3.748428672620076*^9, 3.7484286762450323`*^9}, 3.748430533105579*^9, 
   3.748430563242978*^9, {3.748483105022902*^9, 3.7484831689511147`*^9}, 
   3.748484701475243*^9, 3.760630541575632*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hlaHroZgcF0cbWXdBv4HF/bSdA==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.000000020204082},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748425790780706*^9, 3.748425807827559*^9}, {
   3.748425842300047*^9, 3.74842586710207*^9}, 3.748425909637896*^9, {
   3.748428672620076*^9, 3.7484286762450323`*^9}, 3.748430533105579*^9, 
   3.748430563242978*^9, {3.748483105022902*^9, 3.7484831689511147`*^9}, 
   3.748484701475243*^9, 3.760630541587022*^9}]
}, Open  ]]
},
WindowSize->{2552, 1894},
WindowMargins->{{Automatic, -1583}, {-280, Automatic}},
Magnification->3.,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1144, 34, 371, "Input"],
Cell[1727, 58, 359, 8, 113, "Message"],
Cell[2089, 68, 739, 19, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2865, 92, 1171, 35, 371, "Input"],
Cell[4039, 129, 340, 8, 113, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4416, 142, 131, 3, 134, "Input"],
Cell[4550, 147, 411, 9, 113, "Message"],
Cell[4964, 158, 621, 18, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5622, 181, 728, 21, 347, "Input"],
Cell[6353, 204, 9722, 173, 740, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16112, 382, 802, 22, 253, "Input"],
Cell[16917, 406, 380, 6, 179, "Output"],
Cell[17300, 414, 405, 7, 184, "Output"],
Cell[17708, 423, 6413, 118, 793, "Output"]
}, Open  ]]
}
]
*)

